logging:
  level:
    '[org.springframework.security]': trace

# 认证服务器配置
spring:
  security:
    user:
      name: "user"
      password: "password"
      roles:
        - "USER"
    oauth2:
      client:
        registration:
          login-client:
            provider: login-client
            client-id: "login-client"
            client-secret: "{noop}openid-connect"
            authorization-grant-type: authorization_code,refresh_token
            client-authentication-method: client_secret_basic
            client-name: 
            redirect-uri: http://127.0.0.1:8080/login/oauth2/code/login-client,http://127.0.0.1:8080/authorized
            scope:
            - "openid"
            - "profile"
          login-client-with-messaging:
            provider: login-client-with-messaging
            client-id: "login-client-with-messaging"
            client-secret: "{noop}with-messages"
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code,refresh_token
            redirect-uri: http://127.0.0.1:8080/login/oauth2/code/login-client-with-messaging,http://127.0.0.1:8080/authorized
            scope:
            - "openid"
            - "profile"
            - "message:read"
            - "message:write"
          messaging-client:
            provider: messaging-client
            client-id: "messaging-client"
            client-secret: "{noop}secret"
            client-authentication-method: "client_secret_basic"
            authorization-grant-type: authorization_code,refresh_token,client_credentials
            redirect-uri: http://127.0.0.1:8080/authorized
            scope:
            - "message:read"
            - "message:write"
          google-idp:
            provider: google
            client-id: ${GOOGLE_CLIENT_ID:google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:google-client-secret}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
          github-idp:
            provider: github
            client-id: ${GITHUB_CLIENT_ID:github-client-id}
            client-secret: ${GITHUB_CLIENT_SECRET:github-client-secret}
            scope: user:email, read:user
            client-name: Sign in with GitHub
        provider:
          google:
            user-name-attribute: email
          github:
            user-name-attribute: login
          login-client:
            authorization-uri: 