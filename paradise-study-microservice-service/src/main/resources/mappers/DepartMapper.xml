<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.DepartMapper">
  <resultMap id="BaseResultMap" type="com.wy.model.Depart">
    <id column="depart_id" jdbcType="INTEGER" property="departId" />
    <result column="depart_name" jdbcType="VARCHAR" property="departName" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    depart_id, depart_name, parent_id, sort
  </sql>
  <select id="selectByExample" parameterType="com.wy.model.DepartExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts_depart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts_depart
    where depart_id = #{departId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ts_depart
    where depart_id = #{departId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wy.model.DepartExample">
    delete from ts_depart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="depart_id" keyProperty="departId" parameterType="com.wy.model.Depart" useGeneratedKeys="true">
    insert into ts_depart (depart_name, parent_id, sort
      )
    values (#{departName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="depart_id" keyProperty="departId" parameterType="com.wy.model.Depart" useGeneratedKeys="true">
    insert into ts_depart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departName != null">
        depart_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departName != null">
        #{departName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wy.model.DepartExample" resultType="java.lang.Long">
    select count(*) from ts_depart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts_depart
    <set>
      <if test="record.departId != null">
        depart_id = #{record.departId,jdbcType=INTEGER},
      </if>
      <if test="record.departName != null">
        depart_name = #{record.departName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts_depart
    set depart_id = #{record.departId,jdbcType=INTEGER},
      depart_name = #{record.departName,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wy.model.Depart">
    update ts_depart
    <set>
      <if test="departName != null">
        depart_name = #{departName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where depart_id = #{departId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wy.model.Depart">
    update ts_depart
    set depart_name = #{departName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER}
    where depart_id = #{departId,jdbcType=INTEGER}
  </update>
  <insert id="inserts" parameterType="list">
    insert into ts_depart (depart_id,depart_name,parent_id,sort)  values <foreach collection="list" item="item" index="index" separator=",">(#{item.departId,jdbcType=INTEGER},#{item.departName,jdbcType=VARCHAR},#{item.parentId,jdbcType=INTEGER},#{item.sort,jdbcType=INTEGER})</foreach>
  </insert>
  <delete id="deleteByPrimaryKeys" parameterType="list">
    delete from  ts_depart where depart_id in <foreach open="(" close=")" collection="list" item="departId" separator=",">#{departId,jdbcType=INT}</foreach>
  </delete>
  <delete id="deleteAll">
    delete from  ts_depart 
  </delete>
  <select id="selectEntitys" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from ts_depart<where><if test = "departId != null "> and depart_id = #{departId,jdbcType=INTEGER} </if><if test = "departName != null "> and depart_name = #{departName,jdbcType=VARCHAR} </if><if test = "parentId != null "> and parent_id = #{parentId,jdbcType=INTEGER} </if><if test = "sort != null "> and sort = #{sort,jdbcType=INTEGER} </if></where>
  </select>
  <select id="selectLists" resultType="map">
    select <include refid="Base_Column_List" /> from ts_depart<where><if test = "departId != null "> and depart_id = #{departId,jdbcType=INTEGER} </if><if test = "departName != null "> and depart_name = #{departName,jdbcType=VARCHAR} </if><if test = "parentId != null "> and parent_id = #{parentId,jdbcType=INTEGER} </if><if test = "sort != null "> and sort = #{sort,jdbcType=INTEGER} </if></where>
  </select>
  <select id="countByEntity" resultType="java.lang.Long">
    select count(*) from ts_depart<where><if test = "departId != null ">and depart_id = #{departId,jdbcType=INTEGER} </if><if test = "departName != null ">and depart_name = #{departName,jdbcType=VARCHAR} </if><if test = "parentId != null ">and parent_id = #{parentId,jdbcType=INTEGER} </if><if test = "sort != null ">and sort = #{sort,jdbcType=INTEGER} </if></where>
  </select>
  <select id="getMaxValue" resultType="java.lang.Long">
    select <choose><when test="'departId' == _parameter.column">max(depart_id)</when><when test="'parentId' == _parameter.column">max(parent_id)</when><when test="'sort' == _parameter.column">max(sort)</when><otherwise>max(0)</otherwise>  </choose>  from ts_depart
  </select>
  <select id="getMaxTime" resultType="java.util.Date">
    select <choose><otherwise>1970-01-01 00:00:00</otherwise>  </choose>  from ts_depart
  </select>
</mapper>