<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.DictMapper">
  <resultMap id="BaseResultMap" type="com.wy.model.Dict">
    <id column="dict_id" jdbcType="INTEGER" property="dictId" />
    <result column="dict_name" jdbcType="VARCHAR" property="dictName" />
    <result column="dict_code" jdbcType="VARCHAR" property="dictCode" />
    <result column="dict_val" jdbcType="INTEGER" property="dictVal" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="sort_index" jdbcType="INTEGER" property="sortIndex" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dict_id, dict_name, dict_code, dict_val, pid, sort_index
  </sql>
  <select id="selectByExample" parameterType="com.wy.model.DictExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts_dict
    where dict_id = #{dictId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ts_dict
    where dict_id = #{dictId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wy.model.DictExample">
    delete from ts_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="dict_id" keyProperty="dictId" parameterType="com.wy.model.Dict" useGeneratedKeys="true">
    insert into ts_dict (dict_name, dict_code, dict_val, 
      pid, sort_index)
    values (#{dictName,jdbcType=VARCHAR}, #{dictCode,jdbcType=VARCHAR}, #{dictVal,jdbcType=INTEGER}, 
      #{pid,jdbcType=INTEGER}, #{sortIndex,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="dict_id" keyProperty="dictId" parameterType="com.wy.model.Dict" useGeneratedKeys="true">
    insert into ts_dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dictName != null">
        dict_name,
      </if>
      <if test="dictCode != null">
        dict_code,
      </if>
      <if test="dictVal != null">
        dict_val,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="sortIndex != null">
        sort_index,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dictName != null">
        #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="dictCode != null">
        #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictVal != null">
        #{dictVal,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="sortIndex != null">
        #{sortIndex,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wy.model.DictExample" resultType="java.lang.Long">
    select count(*) from ts_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts_dict
    <set>
      <if test="record.dictId != null">
        dict_id = #{record.dictId,jdbcType=INTEGER},
      </if>
      <if test="record.dictName != null">
        dict_name = #{record.dictName,jdbcType=VARCHAR},
      </if>
      <if test="record.dictCode != null">
        dict_code = #{record.dictCode,jdbcType=VARCHAR},
      </if>
      <if test="record.dictVal != null">
        dict_val = #{record.dictVal,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.sortIndex != null">
        sort_index = #{record.sortIndex,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts_dict
    set dict_id = #{record.dictId,jdbcType=INTEGER},
      dict_name = #{record.dictName,jdbcType=VARCHAR},
      dict_code = #{record.dictCode,jdbcType=VARCHAR},
      dict_val = #{record.dictVal,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      sort_index = #{record.sortIndex,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wy.model.Dict">
    update ts_dict
    <set>
      <if test="dictName != null">
        dict_name = #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="dictCode != null">
        dict_code = #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictVal != null">
        dict_val = #{dictVal,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="sortIndex != null">
        sort_index = #{sortIndex,jdbcType=INTEGER},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wy.model.Dict">
    update ts_dict
    set dict_name = #{dictName,jdbcType=VARCHAR},
      dict_code = #{dictCode,jdbcType=VARCHAR},
      dict_val = #{dictVal,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      sort_index = #{sortIndex,jdbcType=INTEGER}
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
  <insert id="inserts" parameterType="list">
    insert into ts_dict (dict_id,dict_name,dict_code,dict_val,pid,sort_index)  values <foreach collection="list" item="item" index="index" separator=",">(#{item.dictId,jdbcType=INTEGER},#{item.dictName,jdbcType=VARCHAR},#{item.dictCode,jdbcType=VARCHAR},#{item.dictVal,jdbcType=INTEGER},#{item.pid,jdbcType=INTEGER},<choose><when test="item.sortIndex!= null">sort_index = #{item.sortIndex,jdbcType=INTEGER}</when><otherwise>0</otherwise></choose>)</foreach>
  </insert>
  <delete id="deleteByPrimaryKeys" parameterType="list">
    delete from  ts_dict where dict_id in <foreach open="(" close=")" collection="list" item="dictId" separator=",">#{dictId,jdbcType=INT}</foreach>
  </delete>
  <delete id="deleteAll">
    delete from  ts_dict 
  </delete>
  <select id="selectEntitys" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from ts_dict<where><if test = "dictId != null "> and dict_id = #{dictId,jdbcType=INTEGER} </if><if test = "dictName != null "> and dict_name = #{dictName,jdbcType=VARCHAR} </if><if test = "dictCode != null "> and dict_code = #{dictCode,jdbcType=VARCHAR} </if><if test = "dictVal != null "> and dict_val = #{dictVal,jdbcType=INTEGER} </if><if test = "pid != null "> and pid = #{pid,jdbcType=INTEGER} </if><if test = "sortIndex != null "> and sort_index = #{sortIndex,jdbcType=INTEGER} </if></where>
  </select>
  <select id="selectLists" resultType="map">
    select <include refid="Base_Column_List" /> from ts_dict<where><if test = "dictId != null "> and dict_id = #{dictId,jdbcType=INTEGER} </if><if test = "dictName != null "> and dict_name = #{dictName,jdbcType=VARCHAR} </if><if test = "dictCode != null "> and dict_code = #{dictCode,jdbcType=VARCHAR} </if><if test = "dictVal != null "> and dict_val = #{dictVal,jdbcType=INTEGER} </if><if test = "pid != null "> and pid = #{pid,jdbcType=INTEGER} </if><if test = "sortIndex != null "> and sort_index = #{sortIndex,jdbcType=INTEGER} </if></where>
  </select>
  <select id="countByEntity" resultType="java.lang.Long">
    select count(*) from ts_dict<where><if test = "dictId != null ">and dict_id = #{dictId,jdbcType=INTEGER} </if><if test = "dictName != null ">and dict_name = #{dictName,jdbcType=VARCHAR} </if><if test = "dictCode != null ">and dict_code = #{dictCode,jdbcType=VARCHAR} </if><if test = "dictVal != null ">and dict_val = #{dictVal,jdbcType=INTEGER} </if><if test = "pid != null ">and pid = #{pid,jdbcType=INTEGER} </if><if test = "sortIndex != null ">and sort_index = #{sortIndex,jdbcType=INTEGER} </if></where>
  </select>
  <select id="getMaxValue" resultType="java.lang.Long">
    select <choose><when test="'dictId' == _parameter.column">max(dict_id)</when><when test="'dictVal' == _parameter.column">max(dict_val)</when><when test="'pid' == _parameter.column">max(pid)</when><when test="'sortIndex' == _parameter.column">max(sort_index)</when><otherwise>max(0)</otherwise>  </choose>  from ts_dict
  </select>
  <select id="getMaxTime" resultType="java.util.Date">
    select <choose><otherwise>1970-01-01 00:00:00</otherwise>  </choose>  from ts_dict
  </select>
</mapper>