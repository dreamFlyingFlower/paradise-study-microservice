<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.wy.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="depart_id" jdbcType="INTEGER" property="departId" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="salary" jdbcType="DECIMAL" property="salary" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="user_icon" jdbcType="VARCHAR" property="userIcon" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, username, password, realname, depart_id, idcard, birthday, age, sex, address, 
    email, salary, tel, state, user_icon, createtime, updatetime
  </sql>
  <select id="selectByExample" parameterType="com.wy.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ts_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wy.model.UserExample">
    delete from ts_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.wy.model.User" useGeneratedKeys="true">
    insert into ts_user (username, password, realname, 
      depart_id, idcard, birthday, 
      age, sex, address, 
      email, salary, tel, 
      state, user_icon, createtime, 
      updatetime)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{departId,jdbcType=INTEGER}, #{idcard,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{age,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{salary,jdbcType=DECIMAL}, #{tel,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{userIcon,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.wy.model.User" useGeneratedKeys="true">
    insert into ts_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="departId != null">
        depart_id,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="userIcon != null">
        user_icon,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="departId != null">
        #{departId,jdbcType=INTEGER},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="userIcon != null">
        #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wy.model.UserExample" resultType="java.lang.Long">
    select count(*) from ts_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.departId != null">
        depart_id = #{record.departId,jdbcType=INTEGER},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DECIMAL},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.userIcon != null">
        user_icon = #{record.userIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      depart_id = #{record.departId,jdbcType=INTEGER},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      age = #{record.age,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=DECIMAL},
      tel = #{record.tel,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=TINYINT},
      user_icon = #{record.userIcon,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wy.model.User">
    update ts_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="departId != null">
        depart_id = #{departId,jdbcType=INTEGER},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="userIcon != null">
        user_icon = #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wy.model.User">
    update ts_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      depart_id = #{departId,jdbcType=INTEGER},
      idcard = #{idcard,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DECIMAL},
      tel = #{tel,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      user_icon = #{userIcon,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <insert id="inserts" parameterType="list">
    insert into ts_user (user_id,username,password,realname,depart_id,idcard,birthday,age,sex,address,email,salary,tel,state,user_icon,createtime,updatetime)  values <foreach collection="list" index="index" item="item" separator=",">(null,#{item.username,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},#{item.realname,jdbcType=VARCHAR},#{item.departId,jdbcType=INTEGER},#{item.idcard,jdbcType=VARCHAR},#{item.birthday,jdbcType=DATE},#{item.age,jdbcType=INTEGER},#{item.sex,jdbcType=VARCHAR},#{item.address,jdbcType=VARCHAR},#{item.email,jdbcType=VARCHAR},#{item.salary,jdbcType=DECIMAL},#{item.tel,jdbcType=VARCHAR},<choose><when test="item.state!= null">state = #{item.state,jdbcType=TINYINT},</when><otherwise>1,</otherwise></choose>#{item.userIcon,jdbcType=VARCHAR},<choose><when test="item.createtime!= null">createtime = #{item.createtime,jdbcType=TIMESTAMP},</when><otherwise>CURRENT_TIMESTAMP,</otherwise></choose><choose><when test="item.updatetime!= null">updatetime = #{item.updatetime,jdbcType=TIMESTAMP}</when><otherwise>CURRENT_TIMESTAMP</otherwise></choose>)</foreach>
  </insert>
  <delete id="deleteByPrimaryKeys" parameterType="list">
    delete from  ts_user where user_id in <foreach close=")" collection="list" item="userId" open="(" separator=",">#{userId,jdbcType=INT}</foreach>
  </delete>
  <delete id="deleteAll">
    delete from  ts_user 
  </delete>
  <select id="selectEntitys" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from ts_user<where><if test="userId != null "> and user_id = #{userId,jdbcType=INTEGER} </if><if test="username != null "> and username = #{username,jdbcType=VARCHAR} </if><if test="password != null "> and password = #{password,jdbcType=VARCHAR} </if><if test="realname != null "> and realname = #{realname,jdbcType=VARCHAR} </if><if test="departId != null "> and depart_id = #{departId,jdbcType=INTEGER} </if><if test="idcard != null "> and idcard = #{idcard,jdbcType=VARCHAR} </if><if test="birthday != null "> and birthday = #{birthday,jdbcType=DATE} </if><if test="age != null "> and age = #{age,jdbcType=INTEGER} </if><if test="sex != null "> and sex = #{sex,jdbcType=VARCHAR} </if><if test="address != null "> and address = #{address,jdbcType=VARCHAR} </if><if test="email != null "> and email = #{email,jdbcType=VARCHAR} </if><if test="salary != null "> and salary = #{salary,jdbcType=DECIMAL} </if><if test="tel != null "> and tel = #{tel,jdbcType=VARCHAR} </if><if test="state != null "> and state = #{state,jdbcType=TINYINT} </if><if test="userIcon != null "> and user_icon = #{userIcon,jdbcType=VARCHAR} </if><if test="createtime != null "> and createtime = #{createtime,jdbcType=TIMESTAMP} </if><if test="updatetime != null "> and updatetime = #{updatetime,jdbcType=TIMESTAMP} </if></where>
  </select>
  <select id="selectLists" resultType="map">
    select <include refid="Base_Column_List" /> from ts_user<where><if test="userId != null "> and user_id = #{userId,jdbcType=INTEGER} </if><if test="username != null "> and username = #{username,jdbcType=VARCHAR} </if><if test="password != null "> and password = #{password,jdbcType=VARCHAR} </if><if test="realname != null "> and realname = #{realname,jdbcType=VARCHAR} </if><if test="departId != null "> and depart_id = #{departId,jdbcType=INTEGER} </if><if test="idcard != null "> and idcard = #{idcard,jdbcType=VARCHAR} </if><if test="birthday != null "> and birthday = #{birthday,jdbcType=DATE} </if><if test="age != null "> and age = #{age,jdbcType=INTEGER} </if><if test="sex != null "> and sex = #{sex,jdbcType=VARCHAR} </if><if test="address != null "> and address = #{address,jdbcType=VARCHAR} </if><if test="email != null "> and email = #{email,jdbcType=VARCHAR} </if><if test="salary != null "> and salary = #{salary,jdbcType=DECIMAL} </if><if test="tel != null "> and tel = #{tel,jdbcType=VARCHAR} </if><if test="state != null "> and state = #{state,jdbcType=TINYINT} </if><if test="userIcon != null "> and user_icon = #{userIcon,jdbcType=VARCHAR} </if><if test="createtime != null "> and createtime = #{createtime,jdbcType=TIMESTAMP} </if><if test="updatetime != null "> and updatetime = #{updatetime,jdbcType=TIMESTAMP} </if></where>
  </select>
  <select id="countByEntity" resultType="java.lang.Long">
    select count(*) from ts_user<where><if test="userId != null ">and user_id = #{userId,jdbcType=INTEGER} </if><if test="username != null ">and username = #{username,jdbcType=VARCHAR} </if><if test="password != null ">and password = #{password,jdbcType=VARCHAR} </if><if test="realname != null ">and realname = #{realname,jdbcType=VARCHAR} </if><if test="departId != null ">and depart_id = #{departId,jdbcType=INTEGER} </if><if test="idcard != null ">and idcard = #{idcard,jdbcType=VARCHAR} </if><if test="birthday != null ">and birthday = #{birthday,jdbcType=DATE} </if><if test="age != null ">and age = #{age,jdbcType=INTEGER} </if><if test="sex != null ">and sex = #{sex,jdbcType=VARCHAR} </if><if test="address != null ">and address = #{address,jdbcType=VARCHAR} </if><if test="email != null ">and email = #{email,jdbcType=VARCHAR} </if><if test="salary != null ">and salary = #{salary,jdbcType=DECIMAL} </if><if test="tel != null ">and tel = #{tel,jdbcType=VARCHAR} </if><if test="state != null ">and state = #{state,jdbcType=TINYINT} </if><if test="userIcon != null ">and user_icon = #{userIcon,jdbcType=VARCHAR} </if><if test="createtime != null ">and createtime = #{createtime,jdbcType=TIMESTAMP} </if><if test="updatetime != null ">and updatetime = #{updatetime,jdbcType=TIMESTAMP} </if></where>
  </select>
  <select id="getMaxValue" resultType="java.lang.Long">
    select <choose><when test="'userId' == _parameter.column">max(user_id)</when><when test="'departId' == _parameter.column">max(depart_id)</when><when test="'age' == _parameter.column">max(age)</when><when test="'salary' == _parameter.column">max(salary)</when><when test="'state' == _parameter.column">max(state)</when><otherwise>max(0)</otherwise>  </choose>  from ts_user
  </select>
  <select id="getMaxTime" resultType="java.util.Date">
    select <choose><when test="birthday == ${column}">max(birthday)</when><when test="createtime == ${column}">max(createtime)</when><when test="updatetime == ${column}">max(updatetime)</when><otherwise>1970-01-01 00:00:00</otherwise>  </choose>  from ts_user
  </select>
  <resultMap id="BaseResultMap" type="com.wy.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="depart_id" jdbcType="INTEGER" property="departId" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="salary" jdbcType="DECIMAL" property="salary" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="user_icon" jdbcType="VARCHAR" property="userIcon" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, username, password, realname, depart_id, idcard, birthday, age, sex, address, 
    email, salary, tel, state, user_icon, createtime, updatetime
  </sql>
  <select id="selectByExample" parameterType="com.wy.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ts_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wy.model.UserExample">
    delete from ts_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.wy.model.User" useGeneratedKeys="true">
    insert into ts_user (username, password, realname, 
      depart_id, idcard, birthday, 
      age, sex, address, 
      email, salary, tel, 
      state, user_icon, createtime, 
      updatetime)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{departId,jdbcType=INTEGER}, #{idcard,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{age,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{salary,jdbcType=DECIMAL}, #{tel,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{userIcon,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.wy.model.User" useGeneratedKeys="true">
    insert into ts_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="departId != null">
        depart_id,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="userIcon != null">
        user_icon,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="departId != null">
        #{departId,jdbcType=INTEGER},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="userIcon != null">
        #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wy.model.UserExample" resultType="java.lang.Long">
    select count(*) from ts_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.departId != null">
        depart_id = #{record.departId,jdbcType=INTEGER},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DECIMAL},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.userIcon != null">
        user_icon = #{record.userIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      depart_id = #{record.departId,jdbcType=INTEGER},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      age = #{record.age,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=DECIMAL},
      tel = #{record.tel,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=TINYINT},
      user_icon = #{record.userIcon,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wy.model.User">
    update ts_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="departId != null">
        depart_id = #{departId,jdbcType=INTEGER},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="userIcon != null">
        user_icon = #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wy.model.User">
    update ts_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      depart_id = #{departId,jdbcType=INTEGER},
      idcard = #{idcard,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DECIMAL},
      tel = #{tel,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      user_icon = #{userIcon,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <insert id="inserts" parameterType="list">
    insert into ts_user (user_id,username,password,realname,depart_id,idcard,birthday,age,sex,address,email,salary,tel,state,user_icon,createtime,updatetime)  values <foreach collection="list" index="index" item="item" separator=",">(null,#{item.username,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},#{item.realname,jdbcType=VARCHAR},#{item.departId,jdbcType=INTEGER},#{item.idcard,jdbcType=VARCHAR},#{item.birthday,jdbcType=DATE},#{item.age,jdbcType=INTEGER},#{item.sex,jdbcType=VARCHAR},#{item.address,jdbcType=VARCHAR},#{item.email,jdbcType=VARCHAR},#{item.salary,jdbcType=DECIMAL},#{item.tel,jdbcType=VARCHAR},<choose><when test="item.state!= null">state = #{item.state,jdbcType=TINYINT},</when><otherwise>1,</otherwise></choose>#{item.userIcon,jdbcType=VARCHAR},<choose><when test="item.createtime!= null">createtime = #{item.createtime,jdbcType=TIMESTAMP},</when><otherwise>CURRENT_TIMESTAMP,</otherwise></choose><choose><when test="item.updatetime!= null">updatetime = #{item.updatetime,jdbcType=TIMESTAMP}</when><otherwise>CURRENT_TIMESTAMP</otherwise></choose>)</foreach>
  </insert>
  <delete id="deleteByPrimaryKeys" parameterType="list">
    delete from  ts_user where user_id in <foreach close=")" collection="list" item="userId" open="(" separator=",">#{userId,jdbcType=INT}</foreach>
  </delete>
  <delete id="deleteAll">
    delete from  ts_user 
  </delete>
  <select id="selectEntitys" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from ts_user<where><if test="userId != null "> and user_id = #{userId,jdbcType=INTEGER} </if><if test="username != null "> and username = #{username,jdbcType=VARCHAR} </if><if test="password != null "> and password = #{password,jdbcType=VARCHAR} </if><if test="realname != null "> and realname = #{realname,jdbcType=VARCHAR} </if><if test="departId != null "> and depart_id = #{departId,jdbcType=INTEGER} </if><if test="idcard != null "> and idcard = #{idcard,jdbcType=VARCHAR} </if><if test="birthday != null "> and birthday = #{birthday,jdbcType=DATE} </if><if test="age != null "> and age = #{age,jdbcType=INTEGER} </if><if test="sex != null "> and sex = #{sex,jdbcType=VARCHAR} </if><if test="address != null "> and address = #{address,jdbcType=VARCHAR} </if><if test="email != null "> and email = #{email,jdbcType=VARCHAR} </if><if test="salary != null "> and salary = #{salary,jdbcType=DECIMAL} </if><if test="tel != null "> and tel = #{tel,jdbcType=VARCHAR} </if><if test="state != null "> and state = #{state,jdbcType=TINYINT} </if><if test="userIcon != null "> and user_icon = #{userIcon,jdbcType=VARCHAR} </if><if test="createtime != null "> and createtime = #{createtime,jdbcType=TIMESTAMP} </if><if test="updatetime != null "> and updatetime = #{updatetime,jdbcType=TIMESTAMP} </if></where>
  </select>
  <select id="selectLists" resultType="map">
    select <include refid="Base_Column_List" /> from ts_user<where><if test="userId != null "> and user_id = #{userId,jdbcType=INTEGER} </if><if test="username != null "> and username = #{username,jdbcType=VARCHAR} </if><if test="password != null "> and password = #{password,jdbcType=VARCHAR} </if><if test="realname != null "> and realname = #{realname,jdbcType=VARCHAR} </if><if test="departId != null "> and depart_id = #{departId,jdbcType=INTEGER} </if><if test="idcard != null "> and idcard = #{idcard,jdbcType=VARCHAR} </if><if test="birthday != null "> and birthday = #{birthday,jdbcType=DATE} </if><if test="age != null "> and age = #{age,jdbcType=INTEGER} </if><if test="sex != null "> and sex = #{sex,jdbcType=VARCHAR} </if><if test="address != null "> and address = #{address,jdbcType=VARCHAR} </if><if test="email != null "> and email = #{email,jdbcType=VARCHAR} </if><if test="salary != null "> and salary = #{salary,jdbcType=DECIMAL} </if><if test="tel != null "> and tel = #{tel,jdbcType=VARCHAR} </if><if test="state != null "> and state = #{state,jdbcType=TINYINT} </if><if test="userIcon != null "> and user_icon = #{userIcon,jdbcType=VARCHAR} </if><if test="createtime != null "> and createtime = #{createtime,jdbcType=TIMESTAMP} </if><if test="updatetime != null "> and updatetime = #{updatetime,jdbcType=TIMESTAMP} </if></where>
  </select>
  <select id="countByEntity" resultType="java.lang.Long">
    select count(*) from ts_user<where><if test="userId != null ">and user_id = #{userId,jdbcType=INTEGER} </if><if test="username != null ">and username = #{username,jdbcType=VARCHAR} </if><if test="password != null ">and password = #{password,jdbcType=VARCHAR} </if><if test="realname != null ">and realname = #{realname,jdbcType=VARCHAR} </if><if test="departId != null ">and depart_id = #{departId,jdbcType=INTEGER} </if><if test="idcard != null ">and idcard = #{idcard,jdbcType=VARCHAR} </if><if test="birthday != null ">and birthday = #{birthday,jdbcType=DATE} </if><if test="age != null ">and age = #{age,jdbcType=INTEGER} </if><if test="sex != null ">and sex = #{sex,jdbcType=VARCHAR} </if><if test="address != null ">and address = #{address,jdbcType=VARCHAR} </if><if test="email != null ">and email = #{email,jdbcType=VARCHAR} </if><if test="salary != null ">and salary = #{salary,jdbcType=DECIMAL} </if><if test="tel != null ">and tel = #{tel,jdbcType=VARCHAR} </if><if test="state != null ">and state = #{state,jdbcType=TINYINT} </if><if test="userIcon != null ">and user_icon = #{userIcon,jdbcType=VARCHAR} </if><if test="createtime != null ">and createtime = #{createtime,jdbcType=TIMESTAMP} </if><if test="updatetime != null ">and updatetime = #{updatetime,jdbcType=TIMESTAMP} </if></where>
  </select>
  <select id="getMaxValue" resultType="java.lang.Long">
    select <choose><when test="'userId' == _parameter.column">max(user_id)</when><when test="'departId' == _parameter.column">max(depart_id)</when><when test="'age' == _parameter.column">max(age)</when><when test="'salary' == _parameter.column">max(salary)</when><when test="'state' == _parameter.column">max(state)</when><otherwise>max(0)</otherwise>  </choose>  from ts_user
  </select>
  <select id="getMaxTime" resultType="java.util.Date">
    select <choose><when test="birthday == ${column}">max(birthday)</when><when test="createtime == ${column}">max(createtime)</when><when test="updatetime == ${column}">max(updatetime)</when><otherwise>1970-01-01 00:00:00</otherwise>  </choose>  from ts_user
  </select>
</mapper>